" Vim-Plug: Plugin Manager {{{
call plug#begin('~/.vim/plugged')
" color schemes
Plug 'crusoexia/vim-monokai'
Plug 'kristijanhusak/vim-hybrid-material'
" plugins
Plug 'mileszs/ack.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'sjl/gundo.vim'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'scrooloose/syntastic'
Plug 'edkolev/tmuxline.vim'
call plug#end()

" :PlugInstall to install plugins
" :PlugUpdate to update plugins

" }}}
" Color Scheme {{{
syntax enable
set background=dark
set t_Co=256              " set terminal to 256 colors

silent! colorscheme monokai

" Available color schemes:
"   - monokai
"   - hybrid_material

" }}}
" Tabs {{{
set tabstop=2             " number of spaces per tab
set softtabstop=2         " number of spaces in tab when editing
set shiftwidth=2          " number of spaces indented with >> and <<
set expandtab             " convert tabs to spaces
set autoindent            " automatically indent new lines

" }}}
" Editor visual settings {{{
set number                " show line numbers
set cursorline            " highlight current line
set showmatch             " highlight matching parenthesis
set showcmd               " show command in bottom bar
set wildmenu              " visual autocomplete for command menu
set lazyredraw            " redraw only when needed

set modelines=1           " allow a modeline at end of file

" }}}
" Folding {{{
set foldenable            " enable code block folding
set foldlevelstart=10     " open most folds by default
set foldnestmax=10        " 10 nested folds max
set foldmethod=indent     " fold based on indent level

" toggle folding
nnoremap <space> za

" }}}
" Searching {{{
set incsearch             " show search matches as you type
set hlsearch              " Highlight search matches

" clear the search highlight
nnoremap <leader><space> :nohlsearch<CR>

" }}}
" Auto Paste {{{
" automatic autoindent toggle-off-on for pasting text
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

" }}}
" Functionality {{{
set hidden                " hide buffers instead of closing them
set nobackup              " disable vim backup file
set noswapfile            " disable vim swap file
set nocompatible          " disable vi compatibility

set history=1000          " remember more commands and search history
set undolevels=1000       " use many muchos levels of undo

let g:netrw_dirhistmax=0  " disable netrw history file

let mapleader=","         " change the mapleader from \ to ,

" make commands more accessible
nnoremap ; :

" quickly edit the vimrc / zshrc files
nmap <leader>ev :vsp $MYVIMRC<CR>
nmap <leader>ez :vsp ~/.zshrc<CR>
" quickly source the vimrc file
nmap <leader>sv :source $MYVIMRC<CR>

" add command w!! to post-sudo
cmap w!! w !sudo tee % >/dev/null

" shift lines / blocks down with alt+j
nnoremap ∆ :m .+1<CR>==
inoremap ∆ <Esc>:m .+1<CR>==gi
vnoremap ∆ :m '>+1<CR>gv=gv
" shift lines / blocks up with alt+k
nnoremap ˚ :m .-2<CR>==
inoremap ˚ <Esc>:m .-2<CR>==gi
vnoremap ˚ :m '<-2<CR>gv=gv

" }}}
" Ack {{{
let g:ackprg = 'ag --nogroup --nocolor --column'

" shortcut for using Ack
nnoremap <leader>a :Ack

" }}}
" Airline {{{
set laststatus=2          " always show the status bar
set noshowmode            " disable vim's native mode indicator

" show airline for tabs too
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='base16_monokai'
let g:airline_powerline_fonts = 1

" }}}
" CtrlP {{{
" order matches top-to-bottom
let g:ctrlp_match_window = 'bottom,order:ttb'
" open files in a new buffer
let g:ctrlp_switch_buffer = 0
" allow working directory change with CtrlP
let g:ctrlp_working_path_mode = 0
" use Ag for fast file searching
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" to ignore files / directories for searching,
" define a .agignore file

" }}}
" Gundo {{{
let g:gundo_preview_height=25
let g:gundo_right=1

" toggle gundo
nnoremap <leader>u :GundoToggle<CR>

" }}}
" NerdTree {{{
" open NerdTree with ctr-n
nmap <silent><leader>t :NERDTreeTabsToggle<CR>

" }}}
" Syntastic {{{
" don't lint file on save-quit
let g:syntastic_check_on_wq = 0
" use eslint to lint javascript files
let g:syntastic_javascript_checkers = ['eslint']
" use a shorter loc list for errors
let g:syntastic_loc_list_height = 5
" smoother redraw
let g:syntastic_full_redraws = 1

" custom symbols for error notifications
let g:syntastic_error_symbol = '❌'
let g:syntastic_style_error_symbol = '❗️'
let g:syntastic_warning_symbol = '⚠️'
let g:syntastic_style_warning_symbol = '❕'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

" }}}
" vim:foldmethod=marker:foldlevel=0
